import { prisma } from "@/lib/prisma"
import { NextRequest, NextResponse } from "next/server"
import { setMaintenanceCookie } from "@/lib/maintenance-middleware"

/**
 * API d'initialisation - synchronise l'√©tat avec la DB au d√©marrage
 */
export async function GET(request: NextRequest) {
  try {
    // R√©cup√©rer l'√©tat actuel depuis la DB
    const setting = await prisma.siteConfig.findUnique({
      where: { key: "maintenance_mode" }
    })
    
    const isMaintenanceActive = setting?.value === "true"
    
    console.log(`üöÄ Cache maintenance initialis√©: ${isMaintenanceActive}`)
    
    // Cr√©er la r√©ponse avec le cookie de maintenance
    const response = NextResponse.json({ 
      success: true,
      maintenance: isMaintenanceActive,
      message: "Cache synchronis√© avec la base de donn√©es"
    })
    
    // D√©finir le cookie de maintenance
    setMaintenanceCookie(response, isMaintenanceActive)
    
    return response
  } catch (error) {
    console.error("‚ùå Erreur initialisation maintenance:", error)
    
    // En cas d'erreur, d√©sactiver la maintenance
    const response = NextResponse.json({ 
      success: false,
      maintenance: false, 
      error: "Erreur base de donn√©es - maintenance d√©sactiv√©e"
    }, { status: 500 })
    
    setMaintenanceCookie(response, false)
    return response
  }
}
